# Update
sudo apt-get update --allow-releaseinfo-change
sudo apt-get upgrade 

# Install hostapd & dnsmasq
sudo apt-get install hostapd dnsmasq

### Edit configuration files
## Edit dhcpcd.conf:
sudo nano /etc/dhcpcd.conf
# add this to the end of the file
----------
interface uap0
        static ip_adddress=192.168.1.1/24
        nohook wpa_supplicant
----------
## Replace dnsmasq.conf
sudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig

## Create new dnsmasq.conf
sudo nano /etc/dnsmasq.conf
--------------
interface=lo,uap0 #Use interfaces lo and uap0
bind-interfaces                 #Bind to the interfaces
server=8.8.8.8                  #Forward DNS requests to Google DNS
domain-needed                   #Don't forward short names
bogus-priv                      #Never forward addresses in the non-routed address spaces
dhcp-range=192.168.10.11,192.168.10.150,12h
-------------

## Create hostapd.conf
sudo nano /etc/hostapd/hostapd.conf
-------------
# Set the wifi country code
country_code=DK
# Set the channel (frequency) of the host access point
channel=10
# Set the SSID broadcast by your access point (replace with your own, of course)
ssid=UroAP
# This sets the passphrase for your access point (again, use your own)
wpa_passphrase=password
# This is the name of the WiFi interface we configured above
interface=uap0
# Use the 2.4GHz band
hw_mode=g
# Accept all MAC addresses
macaddr_acl=0
# Use WPA authentication
auth_algs=1
# Require clients to know the network name || Set to 1 if SSID should be hidden
ignore_broadcast_ssid=0
# Use WPA2
wpa=2
# Use a pre-shared key
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP
driver=nl80211
----------

## Edit default/hostapd
sudo nano /etc/default/hostapd
# add to the end of the file:
DAEMON_CONF="/etc/hostapd/hostapd.conf"

## Edit wpa_supplicant.conf
sudo nano /etc/wpa_supplicant/wpa_supplicant.conf
#Replace everything with:
-----------------
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=DK

network={
        ssid=%REPLACE ME%
        psk=%REPLACE ME%
        key_mgmt=WPA-PSK
}
-----------------

### Create startup script
## Create new file wifistart
sudo nano /usr/local/bin/wifistart
----------
#!/bin/bash

# Redundant stops to make sure services are not running
echo "Stopping network services (if running)..."
systemctl stop hostapd.service
systemctl stop dnsmasq.service
systemctl stop dhcpcd.service

#Make sure no uap0 interface exists (this generates an error; we could probably use an if statement to check if it exists first)
echo "Removing uap0 interface..."
iw dev uap0 del

#Add uap0 interface (this is dependent on the wireless interface being called wlan0, which it may not be in Stretch)
echo "Adding uap0 interface..."
iw dev wlan0 interface add uap0 type __ap

#Modify iptables (these can probably be saved using iptables-persistent if desired)
echo "IPV4 forwarding: setting..."
sysctl net.ipv4.ip_forward=1
echo "Editing IP tables..."
iptables -t nat -A POSTROUTING -s 192.168.10.0/24 ! -d 192.168.10.0/24 -j MASQUERADE

# Bring up uap0 interface. Commented out line may be a possible alternative to using dhcpcd.conf to set up the IP address.
#ifconfig uap0 192.168.10.1 netmask 255.255.255.0 broadcast 192.168.10.255
ifconfig uap0 up

# Start hostapd. 10-second sleep avoids some race condition, apparently. It may not need to be that long. (?) 
echo "Starting hostapd service..."
systemctl start hostapd.service
sleep 10

#Start dhcpcd. Again, a 5-second sleep
echo "Starting dhcpcd service..."
systemctl start dhcpcd.service
sleep 5

echo "Starting dnsmasq service..."
systemctl start dnsmasq.service
echo "wifistart DONE"
------

## Create reconfigurewpa bash script
sudo nano /usr/local/bin/reconfigurewpa.sh
------
#!/bin/bash

#Call wpa cli reconfigure command on wlan0
sudo wpa_cli -i wlan0 reconfigure
sleep 5

echo "Done"
-----

## Edit rc.local
sudo nano /etc/rc.local
# add the following above exit 0 line
/bin/bash /usr/local/bin/wifistart

## Disable regular network services
sudo systemctl unmask hostapd
sudo systemctl stop hostapd
sudo systemctl stop dnsmasq
sudo systemctl stop dhcpcd
sudo systemctl disable hostapd
sudo systemctl disable dnsmasq
sudo systemctl disable dhcpcd

## Reboot when done

## For testing run the folllowing:
sudo nano /usr/local/bin/wifistart
